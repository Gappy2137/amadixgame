function scr_player_action_animation(){
var fixY = 0;
var fixAngle = 0;
if (state == player_state.wading) || (state == player_state.wading_idle) {
    fixY = 4;
}
else if (state == player_state.swimming) || (state == player_state.swimming_idle) {
    fixY = 16;
}
else {
    fixY = 0;
}

switch (actionstate){
	case player_state_action.eating:
			anim_frame_action_num = 8;
			if (floor(anim_frame_action) == 0){itemUsedX = 1;itemUsedY = -1 + fixY;itemUsedAngle = -15;itemUsedSx = 0;}
			if (floor(anim_frame_action) == 1){itemUsedX = 1;itemUsedY = -1.2 + fixY;itemUsedAngle = -10;itemUsedSx = 0;}
			if (floor(anim_frame_action) == 2){itemUsedX = 0.75;itemUsedY = -3 + fixY;itemUsedAngle = -5;itemUsedSx = 0;}
			if (floor(anim_frame_action) == 3){itemUsedX = 0.5;itemUsedY = -0.5 + fixY;itemUsedAngle = 0;itemUsedSx = 10;
				var part = instance_create_layer(x + itemUsedX - 2, y + itemUsedY + 13 + fixY, "Instances", obj_food_part);
				with(part){
					sx = (obj_amadix.itemeaten mod obj_inventory.spr_inv_items_columns) * 24;
					sy = (obj_amadix.itemeaten div obj_inventory.spr_inv_items_columns) * 24;
					spd = random_range(0.1, 0.6);
					direction = irandom_range(0, 359);
				}
		
			}
			if (floor(anim_frame_action) == 4){itemUsedX = 0.5;itemUsedY = -0.5 + fixY;itemUsedAngle = 0;itemUsedSx = 10;}
			if (floor(anim_frame_action) == 5){itemUsedX = 0.75;itemUsedY = 0 + fixY;itemUsedAngle = -5;itemUsedSx = 14;}
			if (floor(anim_frame_action) == 6){itemUsedX = 1;itemUsedY = 0 + fixY;itemUsedAngle = -10;itemUsedSx = 20;}
	break;
	case player_state_action.drinking:
			anim_frame_action_num = 11;
			if (floor(anim_frame_action) == 0){itemUsedX = 0;itemUsedY = -1 + fixY;itemUsedAngle = -15;itemUsedYscale = 1;}
			if (floor(anim_frame_action) == 1){itemUsedX = -0.25;itemUsedY = -1.25 + fixY;itemUsedAngle = -10;itemUsedYscale = 1;}
			if (floor(anim_frame_action) == 2){itemUsedX = 0;itemUsedY = -1.5 + fixY;itemUsedAngle = -5;itemUsedYscale = 1;}
			if (floor(anim_frame_action) == 3){itemUsedX = 0.5;itemUsedY = -0.25 + fixY;itemUsedAngle = 15;itemUsedYscale = -1;}
			if (floor(anim_frame_action) == 4){itemUsedX = 1;itemUsedY = 0 + fixY;itemUsedAngle = 15;itemUsedYscale = -1;}
			if (floor(anim_frame_action) == 5){itemUsedX = 1;itemUsedY = 0 + fixY;itemUsedAngle = 15;itemUsedYscale = -1;}
			if (floor(anim_frame_action) == 6){itemUsedX = 1;itemUsedY = 0 + fixY;itemUsedAngle = 15;itemUsedYscale = -1;}
			if (floor(anim_frame_action) == 7){itemUsedX = 0.5;itemUsedY = -0.25 + fixY;itemUsedAngle = 15;itemUsedYscale = -1;}
			if (floor(anim_frame_action) == 8){itemUsedX = 0;itemUsedY = -1.5 + fixY;itemUsedAngle = -5;itemUsedYscale = 1;}
			if (floor(anim_frame_action) == 9){itemUsedYscale = 0;}
	break;
	case player_state_action.attacking_melee:
				switch(facing){
				case index_facing.down:
					
					if (anim_frame_action == anim_speed_action){
						var swing = instance_create_layer(x, y + 16, "Instances", obj_melee_swing);
						var sp = anim_speed_action;
						with (swing){
							animation_speed = sp;
						}	
						instance_create_layer(x, y, "Instances", obj_melee_attack);
						with (obj_melee_attack){
							animation_speed = sp;
							face = index_facing.down;
						}
					}
					if (anim_frame_action) <= 5{fixAngle -= 1;}
					if (floor(anim_frame_action) == 0){itemUsedX = 25;itemUsedY = -7 + fixY;itemUsedAngle = 310 + fixAngle;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 1){itemUsedX = 26;itemUsedY = 7 + fixY;itemUsedAngle = 260 + fixAngle;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 2){itemUsedX = 23;itemUsedY = 14 + fixY;itemUsedAngle = 250 + fixAngle;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 3){itemUsedX = 20;itemUsedY = 22 + fixY;itemUsedAngle = 225 + fixAngle;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 4){itemUsedX = 10;itemUsedY = 28 + fixY;itemUsedAngle = 190 + fixAngle;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 5){itemUsedX = 3;itemUsedY = 30 + fixY;itemUsedAngle = 180 + fixAngle;itemUsedSx = 0;}
				break;
				case index_facing.right:
					if (anim_frame_action == anim_speed_action){
						var swing = instance_create_layer(x, y + 16, "Instances", obj_melee_swing);
						var sp = anim_speed_action;
						with (swing){
							animation_speed = sp;
						}	
						instance_create_layer(x, y, "Instances", obj_melee_attack);
						with (obj_melee_attack){
							animation_speed = sp;
							face = index_facing.down;
						}
					}
					if (floor(anim_frame_action) == 0){itemUsedX = 1;itemUsedY = -18 + fixY;itemUsedAngle = 15;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 1){itemUsedX = 12;itemUsedY = -14 + fixY;itemUsedAngle = 340;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 2){itemUsedX = 24;itemUsedY = -12 + fixY;itemUsedAngle = 320;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 3){itemUsedX = 32;itemUsedY = -12 + fixY;itemUsedAngle = 270;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 4){itemUsedX = 24;itemUsedY = -12 + fixY;itemUsedAngle = 240;itemUsedSx = 0;}
					if (floor(anim_frame_action) == 5){itemUsedX = 27;itemUsedY = 1.5 + fixY;itemUsedAngle = 200;itemUsedSx = 0;}
				break;
				case index_facing.left:
				
				break;
				case index_facing.up:
				
				break;
			}
			anim_frame_action_num = 7;
			if ((anim_frame_action) > (anim_frame_action_num)) && (!attackSpeedFix){
				alarm[0] = 10;
				attackSpeedFix = true;
			}
	break;
	default:
		itemUsedX = 0;
		itemUsedY = 0;
		itemUsedAngle = 0;
		itemUsedSx = 0;
		itemUsedYscale = 1;
	break;
}
}